<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="BaseStyle.xaml"></ResourceDictionary>
    </ResourceDictionary.MergedDictionaries>
    <!--按钮 源码行数:2782-3171-->
    <!--ButtonBase基样式-->
    <Style x:Key="ButtonBaseBaseStyle" BasedOn="{StaticResource BaseStyle}" TargetType="{x:Type ButtonBase}">
        <Setter Property="Height" Value="{DynamicResource DefaultControlHeight}"/>
        <Setter Property="Foreground" Value="{DynamicResource ButtonForeground}"/>
        <Setter Property="Padding" Value="{DynamicResource DefaultControlPadding}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
    </Style>
    <!--Button基样式-->
    <Style x:Key="ButtonBaseStyle" BasedOn="{StaticResource ButtonBaseBaseStyle}" TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Border x:Name="border" CornerRadius="4" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="0" SnapsToDevicePixels="true">
                            <!--点击时显示-->
                            <Grid x:Name="PressedLayer" Visibility="Collapsed">
                                <Rectangle Height="3" VerticalAlignment="Top" Fill="#1F000000" RadiusX="4" RadiusY="4">
                                    <Rectangle.Effect>
                                        <BlurEffect Radius="5"></BlurEffect>
                                    </Rectangle.Effect>
                                </Rectangle>
                                <Border CornerRadius="4" BorderBrush="#1F000000" BorderThickness="1,0">
                                    <Border.Effect>
                                        <BlurEffect Radius="3"></BlurEffect>
                                    </Border.Effect>
                                </Border>
                            </Grid>
                        </Border>
                        <Border BorderThickness="{TemplateBinding BorderThickness}">
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        </Border>
                        <!--禁用时显示-->
                        <Rectangle x:Name="EnabledLayer" Fill="#4CFFFFFF" RadiusX="4" RadiusY="4" Visibility="Collapsed"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="PressedLayer" Property="Visibility" Value="Visible"/>
                            <Setter TargetName="border" Property="BorderBrush" Value="#80cccccc"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="EnabledLayer" Property="Visibility" Value="Visible"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--ToggleButton基样式-->
    <Style x:Key="ToggleButtonBaseStyle" BasedOn="{StaticResource ButtonBaseBaseStyle}" TargetType="{x:Type ToggleButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Grid>
                        <Border x:Name="border" CornerRadius="4" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="0" SnapsToDevicePixels="true">
                            <!--点下时显示-->
                            <Grid x:Name="CheckedLayer" Visibility="Collapsed">
                                <Rectangle Height="3" VerticalAlignment="Top" Fill="#1F000000" RadiusX="4" RadiusY="4">
                                    <Rectangle.Effect>
                                        <BlurEffect Radius="5"></BlurEffect>
                                    </Rectangle.Effect>
                                </Rectangle>
                                <Border CornerRadius="4" BorderBrush="#1F000000" BorderThickness="1,0">
                                    <Border.Effect>
                                        <BlurEffect Radius="3"></BlurEffect>
                                    </Border.Effect>
                                </Border>
                            </Grid>
                        </Border>
                        <Border BorderThickness="{TemplateBinding BorderThickness}">
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        </Border>
                        <!--禁用时显示-->
                        <Rectangle x:Name="EnabledLayer" Fill="#4CFFFFFF" RadiusX="4" RadiusY="4" Visibility="Collapsed"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter TargetName="CheckedLayer" Property="Visibility" Value="Visible"/>
                            <Setter TargetName="border" Property="BorderBrush" Value="#80cccccc"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="EnabledLayer" Property="Visibility" Value="Visible"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--Button-->
    <Style BasedOn="{StaticResource ButtonBaseStyle}" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="{DynamicResource Background-Default1}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource BorderBrush-Default1}"/>
        <Setter Property="Foreground" Value="{DynamicResource Foreground-Default}"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#e6e6e6"/>
                <Setter Property="BorderBrush" Value="#adadad"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="btn-primary" BasedOn="{StaticResource ButtonBaseStyle}" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="{DynamicResource Background-Primary1}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource BorderBrush-Primary1}"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#3071a9"/>
                <Setter Property="BorderBrush" Value="#285e8e"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="btn-success" BasedOn="{StaticResource ButtonBaseStyle}" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="{DynamicResource Background-Success1}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource BorderBrush-Success1}"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#449d44"/>
                <Setter Property="BorderBrush" Value="#398439"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="btn-info" BasedOn="{StaticResource ButtonBaseStyle}" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="{DynamicResource Background-Info1}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource BorderBrush-Info1}"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#31b0d5"/>
                <Setter Property="BorderBrush" Value="#269abc"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="btn-warning" BasedOn="{StaticResource ButtonBaseStyle}" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="{DynamicResource Background-Warning1}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource BorderBrush-Warning1}"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#ec971f"/>
                <Setter Property="BorderBrush" Value="#d58512"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="btn-danger" BasedOn="{StaticResource ButtonBaseStyle}" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="{DynamicResource Background-Danger1}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource BorderBrush-Danger1}"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#c9302c"/>
                <Setter Property="BorderBrush" Value="#ac2925"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <!--ToggleButton-->
    <Style BasedOn="{StaticResource ToggleButtonBaseStyle}" TargetType="{x:Type ToggleButton}">
        <Setter Property="Background" Value="{DynamicResource Background-Default1}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource BorderBrush-Default1}"/>
        <Setter Property="Foreground" Value="{DynamicResource Foreground-Default}"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#e6e6e6"/>
                <Setter Property="BorderBrush" Value="#adadad"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="tbtn-primary" BasedOn="{StaticResource ToggleButtonBaseStyle}" TargetType="{x:Type ToggleButton}">
        <Setter Property="Background" Value="{DynamicResource Background-Primary1}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource BorderBrush-Primary1}"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#3071a9"/>
                <Setter Property="BorderBrush" Value="#285e8e"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="tbtn-success" BasedOn="{StaticResource ToggleButtonBaseStyle}" TargetType="{x:Type ToggleButton}">
        <Setter Property="Background" Value="{DynamicResource Background-Success1}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource BorderBrush-Success1}"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#449d44"/>
                <Setter Property="BorderBrush" Value="#398439"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="tbtn-info" BasedOn="{StaticResource ToggleButtonBaseStyle}" TargetType="{x:Type ToggleButton}">
        <Setter Property="Background" Value="{DynamicResource Background-Info1}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource BorderBrush-Info1}"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#31b0d5"/>
                <Setter Property="BorderBrush" Value="#269abc"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="tbtn-warning" BasedOn="{StaticResource ToggleButtonBaseStyle}" TargetType="{x:Type ToggleButton}">
        <Setter Property="Background" Value="{DynamicResource Background-Warning1}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource BorderBrush-Warning1}"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#ec971f"/>
                <Setter Property="BorderBrush" Value="#d58512"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="tbtn-danger" BasedOn="{StaticResource ToggleButtonBaseStyle}" TargetType="{x:Type ToggleButton}">
        <Setter Property="Background" Value="{DynamicResource Background-Danger1}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource BorderBrush-Danger1}"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#c9302c"/>
                <Setter Property="BorderBrush" Value="#ac2925"/>
            </Trigger>
        </Style.Triggers>
    </Style>
</ResourceDictionary>